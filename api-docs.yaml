openapi: 3.0.2
info:
  description: Basic API Template
  version: 1.0.0
  title: Base API
  contact:
    email: tech@fraternie.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:3000
security:
  - firebaseAuth: [ ]
tags:
  - name: Docs
  - name: Base
paths:
  /api:
    get:
      operationId: api
      tags:
        - Docs
      description: Gets the Api docs when in dev mode
      responses:
        200:
          description: Gets the Api docs when in dev mode
          content:
            application/yaml: { }
        400:
          $ref: "#/components/responses/ErrorResponse"
        500:
          $ref: "#/components/responses/ErrorResponse"
  /base:
    get:
      operationId: base
      tags:
        - Base
      description: Base service dummy response
      security: [ ]
      parameters:
        - $ref: "#/components/parameters/CountParam"
      responses:
        200:
          description: Base service dummy response
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: string
        400:
          $ref: "#/components/responses/ErrorResponse"
        500:
          $ref: "#/components/responses/ErrorResponse"
components:
  parameters:
    CountParam:
      in: query
      name: count
      schema:
        nullable: false
        maximum: 40
        minimum: 1
        default: 20
        type: integer

  responses:
    ErrorResponse:
      description: Error response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorSchema"

  securitySchemes:
    firebaseAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Uses firebase idToken for auth

  schemas:
    ErrorSchema:
      type: object
      required:
        - message
        - error
        - statusCode
        - data
      properties:
        message:
          type: string
        error:
          type: string
        statusCode:
          type: number
        data:
          type: object
          nullable: true
    UserType:
      type: string
      enum:
        - A
        - B
        - C
