service: horses-mouth-backend

frameworkVersion: "2"
useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  stage: v1 # Default stage to be used. Default is "dev"
  region: ap-south-1
  timeout: 20
  lambdaHashingVersion: 20201221
  apiName: ${self:service}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:PutObjectAcl
            - s3:GetObject
            - s3:GetObjectAcl
            - s3:DeleteObject
            - dynamodb:PutItem
            - dynamodb:DeleteItem
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:Query
            - dynamodb:BatchGetItem
            - dynamodb:BatchWriteItem
            - dynamodb:ConditionCheck
          Resource:
            - "*"

resources:
  Resources:
    S3Bucket: ${file(resources/s3Bucket.yaml):S3Bucket}
    S3BucketPolicy: ${file(resources/s3Bucket.yaml):S3BucketPolicy}
    UsersTable: ${file(resources/usersTable.yaml):UsersTable}

functions:
  api:
    handler: src/lambda.handler
    timeout: 10
    reservedConcurrency: 5
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors: true

plugins:
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-s3-remover
  - serverless-dotenv-plugin

package:
  include:
    - api-docs.yaml
    - service-account.json

custom:
  remover:
    buckets:
      - ${env:UPLOAD_BUCKET}
  S3Bucket:
    name: ${env:UPLOAD_BUCKET}
